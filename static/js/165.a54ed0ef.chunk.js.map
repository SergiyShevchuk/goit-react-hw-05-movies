{"version":3,"file":"static/js/165.a54ed0ef.chunk.js","mappings":"8QAQMA,EAAQ,CACZC,MAAO,OACPC,SAAU,IACVC,QAAS,oBAwCX,EArCuB,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,cAEGC,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,KAGD,iCACE,4CACA,SAACG,EAAA,EAAD,CAAMC,GAAIjB,EAAV,SACGK,GACCA,EAAOa,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACnB,OACE,UAAC,EAAAC,SAAD,YACE,SAACC,EAAA,GAAD,CAAUC,QAAM,EAAhB,UACE,SAAC,KAAD,CACEC,GAAE,kBAAaJ,GACfpB,MAAO,CAAEyB,eAAgB,QACzBC,MAAO,CAAEC,KAAMpB,EAASqB,SAAUC,OAAQtB,EAASsB,QAHrD,SAKGV,OAGL,SAACW,EAAA,EAAD,MAVaV,YC5B7B,EAHiB,WACf,OAAO,SAAC,EAAD,M,sDCFHW,EAAQC,EAAQ,MACtBD,EAAME,SAASC,QAAU,gCACzB,IAAMC,EAAM,mCAENzB,EAAY,CACV0B,YADU,WACK,OAAD,uHACKL,EAAMM,IAAN,qCAAwCF,IAD7C,cACZG,EADY,OAEZC,EAAOD,EAASC,KAAKC,QAFT,kBAIXD,GAJW,8CAOdE,YARU,SAQErB,GAAK,OAAD,qHACGW,EAAMM,IAAN,iBACXjB,EADW,oBACGe,EADH,oBADH,cACdG,EADc,yBAKbA,EAASC,MALI,8CAQhBG,gBAhBU,SAgBMtB,GAAK,OAAD,qHACDW,EAAMM,IAAN,gBACZjB,EADY,4BACUe,EADV,oBADC,cAClBG,EADkB,yBAKjBA,EAASC,KAAKI,MALG,8CAQpBC,gBAxBU,SAwBMxB,GAAK,OAAD,qHACDW,EAAMM,IAAN,gBACZjB,EADY,4BACUe,EADV,2BADC,cAClBG,EADkB,yBAKjBA,EAASC,KAAKC,SALG,8CAQpBK,iBAhCU,SAgCOC,GAAa,OAAD,qHACVf,EAAMM,IAAN,gCACIF,EADJ,iCACgCW,EADhC,gCADU,cAC3BR,EAD2B,yBAK1BA,EAASC,KAAKC,SALY,+CASrC","sources":["components/TrendingMovies/TrendingMovies.jsx","pages/HomePage/HomePage.jsx","services/theMovieDbApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport getMovies from '../../services/theMovieDbApi';\nimport { Fragment } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\n\nconst style = {\n  width: '100%',\n  maxWidth: 360,\n  bgcolor: 'background.paper',\n};\n\nconst TrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovies\n      .getTrending()\n      .then(setMovies)\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      <List sx={style}>\n        {movies &&\n          movies.map(({ title, id }) => {\n            return (\n              <Fragment key={id}>\n                <ListItem button>\n                  <Link\n                    to={`/movies/${id}`}\n                    style={{ textDecoration: 'none' }}\n                    state={{ from: location.pathname, search: location.search }}\n                  >\n                    {title}\n                  </Link>\n                </ListItem>\n                <Divider />\n              </Fragment>\n            );\n          })}\n      </List>\n    </>\n  );\n};\n\nexport default TrendingMovies;\n","import TrendingMovies from '../../components/TrendingMovies';\nconst HomePage = () => {\n  return <TrendingMovies />;\n};\nexport default HomePage;\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '6fcd47491cc2d89a885f0d4d16c2434f';\n\nconst getMovies = {\n  async getTrending() {\n    const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    const data = response.data.results;\n\n    return data;\n  },\n\n  async getDetailed(id) {\n    const response = await axios.get(\n      `/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  },\n\n  async getMovieCredits(id) {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  },\n\n  async getMovieReviews(id) {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n\n    return response.data.results;\n  },\n\n  async getMoviesOnQuery(searchTerm) {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`\n    );\n\n    return response.data.results;\n  },\n};\n\nexport default getMovies;\n"],"names":["style","width","maxWidth","bgcolor","useState","movies","setMovies","location","useLocation","useEffect","getMovies","then","catch","error","console","log","List","sx","map","title","id","Fragment","ListItem","button","to","textDecoration","state","from","pathname","search","Divider","axios","require","defaults","baseURL","KEY","getTrending","get","response","data","results","getDetailed","getMovieCredits","cast","getMovieReviews","getMoviesOnQuery","searchTerm"],"sourceRoot":""}