{"version":3,"file":"static/js/37.d786c71a.chunk.js","mappings":"2SAWMA,EAAY,CAChBC,UAAW,IAGPC,EAAc,CAClBC,WAAY,IAsEd,EAnEqB,WACnB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcL,EAAaM,IAAI,SAChCD,GACLE,EAAAA,EAAAA,iBACoBF,GACjBG,KAAKV,GACLW,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACV,KAGF,iCACE,iBAAMa,SAlBO,SAAAC,GACfA,EAAEC,iBAEFd,EAAgB,CAAEe,MAAOF,EAAEG,OAAOC,YAAYC,QAE9CL,EAAEG,OAAOG,SAamBC,MAAO7B,EAAjC,UACE,UAAC8B,EAAA,GAAD,CACEC,WAAS,EACTC,UAAU,MACVC,eAAe,aACfC,WAAW,SAJb,WAME,SAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QACNC,aAAa,GACbC,KAAK,OACLC,KAAK,cACLC,aAAa,SAEf,SAACC,EAAA,EAAD,CAAQH,KAAK,SAASI,KAAK,QAAQd,MAAO3B,EAA1C,yBAKHG,EAAOuC,OAAS,IACf,SAACC,EAAA,EAAD,UACGxC,EAAOyC,KAAI,WAAyBC,GAAS,IAA/BX,EAA8B,EAA9BA,GAAIY,EAA0B,EAA1BA,eACjB,OACE,UAAC,EAAAC,SAAD,YACE,SAACC,EAAA,GAAD,CAAUC,QAAM,EAAhB,UACE,SAAC,KAAD,CACEC,GAAE,kBAAahB,GACfiB,MAAO,CAAEC,KAAM5C,EAAS6C,SAAUC,OAAQ9C,EAAS8C,QACnD3B,MAAO,CAAE4B,eAAgB,QAH3B,SAKGT,OAGL,SAACU,EAAA,EAAD,MAVaX,YC9D7B,EAHmB,WACjB,OAAO,SAAC,EAAD,M,sDCFHY,EAAQC,EAAQ,MACtBD,EAAME,SAASC,QAAU,gCACzB,IAAMC,EAAM,mCAENhD,EAAY,CACViD,YADU,WACK,OAAD,uHACKL,EAAM7C,IAAN,qCAAwCiD,IAD7C,cACZE,EADY,OAEZC,EAAOD,EAASC,KAAKC,QAFT,kBAIXD,GAJW,8CAOdE,YARU,SAQEhC,GAAK,OAAD,qHACGuB,EAAM7C,IAAN,iBACXsB,EADW,oBACG2B,EADH,oBADH,cACdE,EADc,yBAKbA,EAASC,MALI,8CAQhBG,gBAhBU,SAgBMjC,GAAK,OAAD,qHACDuB,EAAM7C,IAAN,gBACZsB,EADY,4BACU2B,EADV,oBADC,cAClBE,EADkB,yBAKjBA,EAASC,KAAKI,MALG,8CAQpBC,gBAxBU,SAwBMnC,GAAK,OAAD,qHACDuB,EAAM7C,IAAN,gBACZsB,EADY,4BACU2B,EADV,2BADC,cAClBE,EADkB,yBAKjBA,EAASC,KAAKC,SALG,8CAQpBK,iBAhCU,SAgCOC,GAAa,OAAD,qHACVd,EAAM7C,IAAN,gCACIiD,EADJ,iCACgCU,EADhC,gCADU,cAC3BR,EAD2B,yBAK1BA,EAASC,KAAKC,SALY,+CASrC","sources":["components/MoviesSearch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx","services/theMovieDbApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport { Fragment } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport getMovies from '../../services/theMovieDbApi';\n\nconst formStyle = {\n  marginTop: 30,\n};\n\nconst buttonStyle = {\n  marginLeft: 20,\n};\n\nconst MoviesSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: e.target.searchInput.value });\n\n    e.target.reset();\n  };\n  useEffect(() => {\n    const queryString = searchParams.get('query');\n    if (!queryString) return;\n    getMovies\n      .getMoviesOnQuery(queryString)\n      .then(setMovies)\n      .catch(error => console.log(error));\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} style={formStyle}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n        >\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Movie\"\n            defaultValue=\"\"\n            type=\"text\"\n            name=\"searchInput\"\n            autoComplete=\"off\"\n          />\n          <Button type=\"submit\" size=\"large\" style={buttonStyle}>\n            Search\n          </Button>\n        </Grid>\n      </form>\n      {movies.length > 0 && (\n        <List>\n          {movies.map(({ id, original_title }, idx) => {\n            return (\n              <Fragment key={idx}>\n                <ListItem button>\n                  <Link\n                    to={`/movies/${id}`}\n                    state={{ from: location.pathname, search: location.search }}\n                    style={{ textDecoration: 'none' }}\n                  >\n                    {original_title}\n                  </Link>\n                </ListItem>\n                <Divider />\n              </Fragment>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import MoviesSearch from '../../components/MoviesSearch';\nconst MoviesPage = () => {\n  return <MoviesSearch />;\n};\nexport default MoviesPage;\n","const axios = require('axios');\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '6fcd47491cc2d89a885f0d4d16c2434f';\n\nconst getMovies = {\n  async getTrending() {\n    const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    const data = response.data.results;\n\n    return data;\n  },\n\n  async getDetailed(id) {\n    const response = await axios.get(\n      `/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  },\n\n  async getMovieCredits(id) {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  },\n\n  async getMovieReviews(id) {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n\n    return response.data.results;\n  },\n\n  async getMoviesOnQuery(searchTerm) {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`\n    );\n\n    return response.data.results;\n  },\n};\n\nexport default getMovies;\n"],"names":["formStyle","marginTop","buttonStyle","marginLeft","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","queryString","get","getMovies","then","catch","error","console","log","onSubmit","e","preventDefault","query","target","searchInput","value","reset","style","Grid","container","direction","justifyContent","alignItems","TextField","id","label","defaultValue","type","name","autoComplete","Button","size","length","List","map","idx","original_title","Fragment","ListItem","button","to","state","from","pathname","search","textDecoration","Divider","axios","require","defaults","baseURL","KEY","getTrending","response","data","results","getDetailed","getMovieCredits","cast","getMovieReviews","getMoviesOnQuery","searchTerm"],"sourceRoot":""}